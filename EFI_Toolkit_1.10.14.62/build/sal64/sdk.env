#
# Copyright (c) 1999, 2000
# Intel Corporation.
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# 3. All advertising materials mentioning features or use of this software must
#    display the following acknowledgement:
# 
#    This product includes software developed by Intel Corporation and its
#    contributors.
# 
# 4. Neither the name of Intel Corporation or its contributors may be used to
#    endorse or promote products derived from this software without specific
#    prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY INTEL CORPORATION AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED.  IN NO EVENT SHALL INTEL CORPORATION OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 

#	
# The following environment variables must be defined for a "make" to work.
#

#
# Root tool paths for Microsoft (MSSdk) and Intel (_IA64SDK_DIR)
#
MSSdk        = C:\IPFTools\Microsoft
_IA64SDK_DIR = C:\IPFTools\Intel71

#
# Directories
#

SDK_BUILD_DIR = $(SDK_INSTALL_DIR)\build\$(SDK_BUILD_ENV)\output
SDK_BIN_DIR   = $(SDK_INSTALL_DIR)\build\$(SDK_BUILD_ENV)\bin
BUILD_TOOL    = $(SDK_INSTALL_DIR)\build\tools\bin
BIN_DIR       = $(SDK_BIN_DIR)

#
# Processor type
#

PROCESSOR=Ia64

#
# Flags
#
# NOTE: CHANGE C_BUILD, AFLAGS, & CC WHEN YOU CHANGE COMPILERS 
#

C_STD_INCLUDE=/X
C_PROJ_FLAGS=/D EFI64

!IF "$(EFI_DEBUG)" == "YES"
C_PROJ_FLAGS= $(C_PROJ_FLAGS) /D EFI_DEBUG 
!ENDIF

#
# set EFI include directory
# "include\efi110" for EFI1.10 and Multimodal application
# "include\efi"	for EFI1.02 application
#

!IF "$(EFI_APPLICATION_COMPATIBILITY)" == "EFI_APP_110"
EFI_INC_DIR=efi110
C_PROJ_FLAGS= $(C_PROJ_FLAGS) /D EFI_APP_110
!ELSE IF "$(EFI_APPLICATION_COMPATIBILITY)" == "EFI_APP_MULTIMODAL"
EFI_INC_DIR=efi110
C_PROJ_FLAGS= $(C_PROJ_FLAGS) /D EFI_APP_MULTIMODAL 
!ELSE IF "$(EFI_APPLICATION_COMPATIBILITY)" == "EFI_APP_102"
EFI_INC_DIR=efi
C_PROJ_FLAGS= $(C_PROJ_FLAGS) /D EFI_APP_102
!ELSE
!MESSAGE  "EFI_APPLICATION_COMPATIBILITY" not set correctly, set it it to dafault "EFI_APP_102"
EFI_INC_DIR=efi
C_PROJ_FLAGS= $(C_PROJ_FLAGS) /D EFI_APP_102
!ENDIF


#
# SOFT_SDV flag is referenced in pci22.h
#

!IF "$(SOFT_SDV)" == "YES"
C_PROJ_FLAGS= $(C_PROJ_FLAGS) /D SOFT_SDV
!ENDIF

#
#  Set this to 1 when compiling applications that will be run on firmware
#  with pre-0.99 EFI shells
#
#OLD_SHELL = 1


#
#  Microsoft Windows 2003 Itanium DDK 3790 compiler
#
# optimization turned off default
C_BUILD_FLAGS=/nologo /Zx /Zl /Zi /Od /W3 /Wp64 /QIPF_fr32
L_BUILD_FLAGS   = /nologo /SUBSYSTEM:NATIVE /NODEFAULTLIB /MACHINE:IA64 /MAP 
LIB_BUILD_FLAGS = /nologo

# optimzation turned on
#C_BUILD_FLAGS=/nologo /W3 /GL /O1 /Wp64 /QIPF_fr32
#L_BUILD_FLAGS   = /nologo /SUBSYSTEM:NATIVE /LTCG /OPT:REF /NODEFAULTLIB /MACHINE:IA64  
#LIB_BUILD_FLAGS = /nologo /LTCG

#
#  Intel (ecl) 7.1 compiler   linker is from Microsoft Windows 2003 Itanium DDK 3790 compiler
#
# optimization off
#C_BUILD_FLAGS = /nologo /X /Zl /Zi /Od /W3 /D NO_INTERFACE_DECL /QIA64_fr32
#L_BUILD_FLAGS   = /nologo /SUBSYSTEM:NATIVE /NODEFAULTLIB /MACHINE:IA64 /MAP /DEBUGTYPE:CV /DEBUG:FULL
#LIB_BUILD_FLAGS = /nologo

AFLAGS   = -X explicit -F COFF32_PLUS -N us
CFLAGS_P = /EP  /C $(C_STD_INCLUDE) $(C_PROJ_FLAGS) $(INC)

#
# Ia64 tools Microsoft
#
LINK = $(MSSdk)\link
LIB  = $(MSSdk)\lib
ASM  = $(MSSdk)\ias
CC = $(MSSdk)\cl

# ia64 tools with intel
#LINK = $(_IA64SDK_DIR)\xilink
#LIB  = $(_IA64SDK_DIR)\xilib
#ASM  = $(_IA64SDK_DIR)\ias
#CC = $(_IA64SDK_DIR)\ecl

MAKE    = nmake -nologo
FWIMAGE = $(BUILD_TOOL)\fwimage
BSCMAKE = bscmake

#
# Flags
#

L_FLAGS   = $(L_BUILD_FLAGS) $(L_PROJ_FLAGS)
C_FLAGS   = $(C_BUILD_FLAGS) $(C_STD_INCLUDE) $(C_PROJ_FLAGS) $(INC)
LIB_FLAGS = $(LIB_BUILD_FLAGS) $(LIB_PROJ_FLAGS)
